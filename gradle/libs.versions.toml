# https://docs.gradle.org/current/userguide/platforms.html#sub:platforms-vs-catalog
[versions]
checkstyle = "9.0"
jacoco = "0.8.7"
springboot = "3.0.3"
spring = "6.0.3"

jupiter = "5.9.1"

jackson = "2.14.1"

flink = "1.15.2"


[libraries]

maven = { module = "org.apache.maven:apache-maven", version = "3.8.6" }
spotless = { module = "com.diffplug.spotless:spotless-plugin-gradle", version = "6.11.0"}
lombok = { module = "io.freefair.gradle:lombok-plugin", version = "6.6-rc1"}

# spring-boot
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "springboot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "springboot" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "springboot" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "springboot" }
spring-boot-starter-cache = { module = "org.springframework.boot:spring-boot-starter-cache", version.ref = "springboot" }
spring-boot-starter-jetty = { module = "org.springframework.boot:spring-boot-starter-jetty", version.ref = "springboot" }
spring-boot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop", version.ref = "springboot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "springboot" }
spring-boot-autoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure", version.ref = "springboot" }

flowable-spring-boot-starter = { module = "org.flowable:flowable-spring-boot-starter", version = "7.0.0.M1" }
# documnet https://springdoc.org/#migrating-from-springfox
knife4j-spring-boot-starter = { module = "com.github.xiaoymin:knife4j-openapi3-jakarta-spring-boot-starter", version = "4.0.0" }
retrofit-spring-boot-starter = {module = "com.github.lianjiatech:retrofit-spring-boot-starter", version = "3.0.0"}

# spring
spring-webmvc = { module = "org.springframework:spring-webmvc", version.ref = "spring" }
spring-data-common = { module = "org.springframework.data:spring-data-commons", version = "3.0.0" }

# querydsl
querydsl-jpa = { module = "com.querydsl:querydsl-jpa", version = "5.0.0"}
querydsl-apt = { module = "com.querydsl:querydsl-apt", version = "5.0.0"}

# junit
junit-jupiter-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "jupiter" }
junit-jupiter-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "jupiter" }
junit-jupiter-params = { group = "org.junit.jupiter", name = "junit-jupiter-params", version.ref = "jupiter" }

# commons jar
commons-lang3 = { module = "org.apache.commons:commons-lang3", version = "3.12.0" }
commons-io = { module = "commons-io:commons-io", version = "2.11.0" }
commons-collections4 = { module = "org.apache.commons:commons-collections4", version = "4.4" }
commons-email = { module = "org.apache.commons:commons-email", version = "1.5" }
commons-text = { module = "org.apache.commons:commons-text", version = "1.10.0" }
commons-dbutils = { module = "commons-dbutils:commons-dbutils", version = "1.7" }
commons-codec = { module = "commons-codec:commons-codec", version = "1.15" }
commons-configuration = { module = "org.apache.commons:commons-configuration2", version = "2.8.0" }

#hibernate
hibernate-jpamodelgen = { module = "org.hibernate.orm:hibernate-jpamodelgen", version = "6.1.6.Final" }

# database
h2 = { module = "com.h2database:h2", version = "2.1.212" }
postgresql = { module = "org.postgresql:postgresql", version = "42.5.1" }
mysql-connector-j = { module = "com.mysql:mysql-connector-j", version = "8.0.32" }

hikaricp = { module = "com.zaxxer:HikariCP", version = "5.0.1" }
snakeyaml = { module = "org.yaml:snakeyaml", version = "1.33" }
mockito = { module = "org.mockito:mockito-junit-jupiter", version = "4.8.0" }
jsr305 = { module = "com.google.code.findbugs:jsr305", version = "3.0.2" }

mapstruct = { module = "org.mapstruct:mapstruct", version = "1.5.3.Final" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version = "1.5.3.Final" }
mapstruct-spring-annotations = { module = "org.mapstruct.extensions.spring:mapstruct-spring-annotations", version = "0.1.2"}
mapstruct-spring-extensions = { module = "org.mapstruct.extensions.spring:mapstruct-spring-extensions", version = "0.1.2"}

#EasyExcel
easyexcel = { module = "com.alibaba:easyexcel",version= "3.1.4" }

#Guava
guava = { module = "com.google.guava:guava",version = "31.1-jre" }

#Groovy
groovy = { module = "org.apache.groovy:groovy", version = "4.0.9"}

caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version = "2.9.3" }

auto-service = { module = "com.google.auto.service:auto-service", version = "1.0.1" }
jaxb-api = { module = "javax.xml.bind:jaxb-api", version = "2.3.1" }

#transmittable-thread-local
transmittable-thread-local = {module = "com.alibaba:transmittable-thread-local",version = "2.14.2"}

#hutool
hutool = {module = "cn.hutool:hutool-all",version = "5.8.11"}

okhttp = { module = "com.squareup.okhttp3:okhttp", version = "5.0.0-alpha.11" }

# jackson
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }

#jakarta
jakarta-servlet-api = { module = "jakarta.servlet:jakarta.servlet-api", version = "6.0.0" }
jakarta-validation-api = { module = "jakarta.validation:jakarta.validation-api", version = "3.0.2" }
#swagger-annotations
swagger-annotations = {module = "io.swagger.core.v3:swagger-annotations",version = "2.2.7"}

slf4j-api = { module = "org.slf4j:slf4j-api", version = "2.0.6" }

#flink
flink-streaming-java = { module = "org.apache.flink:flink-streaming-java", version.ref = "flink" }
flink-clients = { module = "org.apache.flink:flink-clients", version.ref = "flink" }
flink-table-api-java-bridge = { module = "org.apache.flink:flink-table-api-java-bridge", version.ref = "flink" }
flink-connector-pulsar = { module = "org.apache.flink:flink-connector-pulsar", version.ref = "flink" }
flink-connector-jdbc = { module = "org.apache.flink:flink-connector-jdbc", version.ref = "flink" }
flink-connector-starrocks = { module = "com.starrocks:flink-connector-starrocks", version = "1.2.6_flink-1.15" }

[bundles]
junit-jupiter = ["junit-jupiter-api", "junit-jupiter-engine", "junit-jupiter-params"]

[plugins]
shadow = { id = "com.github.johnrengelman.shadow", version = "7.1.2"}
